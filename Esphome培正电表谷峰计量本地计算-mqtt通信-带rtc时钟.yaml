####################################################################################
#   项目名称：         Esphome培正电表谷峰计量本地计算-mqtt通信-带rtc时钟
#
#   作者：             jjcs
#        
#   时间：             2024.7.25
#
#   更新：V1.3
#  对上月的数据flash清零
#   
#   
####################################################################################

####################################################################################
#
#            配置定义
#
####################################################################################
substitutions:
#初始配置
  node_name: "需要修改"                                #名称  修改
  node_logger_level: INFO                             #日志级别
  node_api_key: 需要修改                            #api密钥  修改
  node_ota_password: "需要修改"                    #ota密钥  修改
  node_wifi_ssid: "需要修改"                       #wifi名称
  node_wifi_password: "需要修改"                  #wifi密码
  node_manual_ip_static_ip: 需要修改              #静态ip
  node_manual_ip_gateway: 需要修改                #网关
  node_manual_ip_subnet: 255.255.255.0             #子网掩码        修改
  node_ap_ssid: ${node_name}_ap                    #ap
  node_ap_password: 需要修改            
#####################################################################################

#####################################################################################
#
#           #官方诊断组件
#
#################################################################################### 
  node_version_name: ${node_name}_version                             #编译时间
  node_sensor_wifi_signal_name: ${node_name}_wifi_signal                 #wifi强度
  node_sensor_uptime_name: ${node_name}_uptime
  node_internal_temperature_name: ${node_name}_internal_temperature
  #node_esp_cpu_freq_name: ${node_name}_esp_cpu_freq
  #node_esp_free_memory_name: ${node_name}_esp_free_memory
  node_linkstatus: ${node_name}_linkstatus
  #node_esp_memory_frag_name: ${node_name}_esp_memory_frag
  node_wifi_info_ip_address_name: ${node_name}_ip_address
  #node_wifi_info_bssid_name: ${node_name}_bssid
  node_wifi_info_mac_address_name: ${node_name}_mac_address
  #node_wifi_latest_scan_results_name: ${node_name}_latest_scan_results
  #node_wifi_dns_address_name: ${node_name}_dns_address
  node_switch_restart_name: ${node_name}_restart
  node_switch_safe_mode_name:  ${node_name}_safe_mode
  node_debug_free_name: ${node_name}_debug_free
  node_debug_block_name: ${node_name}_debug_block
  node_debug_reset_reason_name: ${node_name}_debug_reset_reason
#################################################################################### 

#####################################################################################
#
#           #web_server
#
#################################################################################### 
web_server:
  port: 80
  local: true
  version: 3
  auth:
    username: 需要修改
    password: 需要修改
#################################################################################### 


####################################################################################
#
#           头文件
#
####################################################################################
packages:
  common-component: !include esp32c3.yaml
####################################################################################


####################################################################################
#
#           mqtt配置
#
####################################################################################
mqtt:
  broker: 需要修改
  port: 需要修改
  username: 需要修改
  password: 需要修改
  client_id: 需要修改
  #discovery: true
  discovery_retain: true   #保留
  keepalive: 15s
  topic_prefix: 需要修改  #主题前缀
  #log_topic: 
  #  topic: "rural-electricity-meter/logs"
  #  level: INFO
  #discovery_prefix: homeassistant
  #discovery_object_id_generator: device_name
  #discovery_unique_id_generator: mac
####################################################################################




#最后的遗嘱
  birth_message:
    topic: rural-electricity-meter/birth_message
    payload: online
    retain: true
  will_message:
    topic: rural-electricity-meter/will_message
    payload: offline
    retain: true
  shutdown_message:
    topic: rural-electricity-meter/shutdown_message
    payload: offline
    retain: true
  on_connect:
    - switch.turn_on: gp12
  on_disconnect:
    - switch.turn_off: gp12

switch:  
  - platform: output
    name: "${node_name}_gpio12"
    output: 'gpio_12'
    id: gp12
  - platform: output
    name: "${node_name}_gpio13"
    output: 'gpio_13'





output:
  - platform: ledc
    pin: #GPIO12  #D4
      number: LED1_BUILTIN
      ignore_pin_validation_error: true
    id: gpio_12
    frequency: 2000
    # inverted: true

  - platform: ledc
    pin: #GPIO13  #D5    
      number: LED2_BUILTIN
      ignore_pin_validation_error: true
    id: gpio_13
    frequency: 2000



####################################################################################
#
#            串口底层配置
#
####################################################################################
uart:
  - id: main_uart
    rx_pin: 
      #number: GPIO6
      number: GPIO1
      inverted: false
      mode:
        input: true
        pullup: true
    tx_pin: 
      #number: GPIO7
      number: GPIO0     
      inverted: false
      mode:
        output: true
    baud_rate: 9600
    #debug:
     # direction: BOTH
####################################################################################

####################################################################################
#
#           i2c总线配置-rtc时钟
#
####################################################################################
i2c:
  sda: 4
  scl: 5
  scan: true
  id: bus_a
####################################################################################


modbus:
  - id: mod_bus_pzemac
    send_wait_time: 500ms
    uart_id: main_uart
   
#清零组
button:
  - platform: template
    name: ${node_name}_Meter Reset
    id: reset_button
    icon: "mdi:emoticon-outline"
    on_press:
      - pzemac.reset_energy: pzemac_main

  - platform: template
    name: ${node_name}_Clear_Memory
    id: clear_memory
    entity_category: diagnostic
    on_press:
      - lambda: |-
            id(global_today_peak_usage) = 0.000f;    //  # flash保存今日峰电量
            id(global_today_valley_usage) = 0.000f;  // # flash保存今日谷电量
            id(global_today_peak_bill) = 0.000f;     //flash保存今日峰电费
            id(global_today_valley_bill) = 0.000f;    //# flash保存今日谷电费
            id(global_month_peak_usage) = 0.000f;     //  # flash保存本月峰电量(昨日为止)
            id(global_month_valley_usage) = 0.000f;   //# flash保存本月谷电量（昨日为止）
            id(global_month_peak_bill) = 0.000f;   //# flash保存本月峰电费（昨日为止）
            id(global_month_valley_bill)= 0.000f;   //# flash保存本月谷电费（昨日为止）
            
            //2024.7.23 基础上添加修改
            id(global_yesterday_usage)= 0.000f;  
            id(global_yesterday_peak_usage)= 0.000f;  
            id(global_yesterday_valley_usage)= 0.000f;  
            id(global_yesterday_peak_bill)= 0.000f;  
            id(global_yesterday_valley_bill)= 0.000f;  


#对上月的数据flash清零
  - platform: template
    name: ${node_name}_Clear_Memory_Month
    id: clear_memory_Month
    entity_category: diagnostic
    on_press:
      - lambda: |-
            //2024.7.25 基础上添加修改      
            id(global_last_month_peak_usage)= 0.000f;  
            id(global_last_month_valley_usage)= 0.000f;  
            id(global_last_month_peak_bill)= 0.000f;  
            id(global_last_month_valley_bill)= 0.000f;  



globals:
  # flash保存表复位（清0）时的年度用电量
  - id: global_reset_annual_usage
    type: float
    restore_value: yes
    initial_value: '0.000'

  # flash保存1号00:00:00的用电度数(上月用电度数)
  - id: global_last_month_usage
    type: float
    restore_value: yes
    initial_value: '0.000'

  # flash保存00:00:00的抄表数(昨日抄表数)
  - id: global_yesterday_energy
    type: float
    restore_value: yes
    initial_value: '0.000'
  # flash保存00:00:00的昨日用电量
  - id: global_yesterday_usage
    type: float
    restore_value: yes
    initial_value: '0.000'
  # flash保存00:00:00的昨日峰电量
  - id: global_yesterday_peak_usage
    type: float
    restore_value: yes
    initial_value: '0.000'
  # flash保存00:00:00的昨日谷电量
  - id: global_yesterday_valley_usage
    type: float
    restore_value: yes
    initial_value: '0.000'
  # flash保存00:00:00的昨日峰电费
  - id: global_yesterday_peak_bill
    type: float
    restore_value: yes
    initial_value: '0.000'
  # flash保存00:00:00的昨日谷电费
  - id: global_yesterday_valley_bill
    type: float
    restore_value: yes
    initial_value: '0.000'

  # flash保存上月峰电量
  - id: global_last_month_peak_usage
    type: float
    restore_value: yes
    initial_value: '0.000'
  # flash保存上月谷电量
  - id: global_last_month_valley_usage
    type: float
    restore_value: yes
    initial_value: '0.000'
  # flash保存上月峰电费
  - id: global_last_month_peak_bill
    type: float
    restore_value: yes
    initial_value: '0.000'
  # flash保存上月谷电费
  - id: global_last_month_valley_bill
    type: float
    restore_value: yes
    initial_value: '0.000'

  # flash保存今日峰电量
  - id: global_today_peak_usage
    type: float
    restore_value: yes
    initial_value: '0.000'
  # flash保存今日谷电量
  - id: global_today_valley_usage
    type: float
    restore_value: yes
    initial_value: '0.000'
  # flash保存今日峰电费
  - id: global_today_peak_bill
    type: float
    restore_value: yes
    initial_value: '0.000'
  # flash保存今日谷电费
  - id: global_today_valley_bill
    type: float
    restore_value: yes
    initial_value: '0.000'

  # flash保存本月峰电量(昨日为止)
  - id: global_month_peak_usage
    type: float
    restore_value: yes
    initial_value: '0.000'
  # flash保存本月谷电量（昨日为止）
  - id: global_month_valley_usage
    type: float
    restore_value: yes
    initial_value: '0.000'
  # flash保存本月峰电费（昨日为止）
  - id: global_month_peak_bill
    type: float
    restore_value: yes
    initial_value: '0.000'
  # flash保存本月谷电费（昨日为止）
  - id: global_month_valley_bill
    type: float
    restore_value: yes
    initial_value: '0.000'

  # 全局变量：当前是峰电价(true,flase)flash不保存，计算所得 
  - id: global_is_peak_price
    type: bool
    restore_value: false
    initial_value: 'true'
  # 全局变量：当前阶梯档位(0,1,2)flash不保存，计算所得 
  - id: global_step_id
    type: int
    restore_value: false
    initial_value: '0'
  # 全局变量：上1分钟抄表数，不保存
  - id: global_last_energy
    type: float
    restore_value: false
    initial_value: '-0.001'

number:
  # 设置表读数为0（复位）时的年度电量，加上表上读数为实际当年使用度数， 用来计算阶梯电价
  - platform: template
    id: set_reset_annual_usage
    name: ${node_name}_Set Reset Annual Usage
    mode: box
    min_value: 0
    max_value: 9999
    initial_value: 0
    optimistic: true
    step: 1
    restore_value: false
    unit_of_measurement: kwh
    on_value_range:
      above: 1
      below: 9999
      then:
        - lambda: |-
            id(global_reset_annual_usage) = x;
            id(reset_annual_usage).publish_state(id(global_reset_annual_usage));
            id(actual_annual_usage).publish_state( id(global_reset_annual_usage) + id(main_energy).state );  
            id(current_price).update(); 


sensor:
####################################################################################
#
#            ##时间月份传感器
#
#################################################################################### 
  - platform: template
    name: "${node_name}_sntp_sensor"
    id: "id_spot_price_sntp_sensor"
    unit_of_measurement: s


  - platform: template
    name: "${node_name}_month_sntp_sensor"
    id: "id_month_sntp_sensor"
    unit_of_measurement: 月

####################################################################################
  # 培正电表，每月重置
  - platform: pzemac
    id: pzemac_main
    update_interval: 10s
    address: 0x01
    modbus_id: mod_bus_pzemac
    current:
      name: "${node_name}_Current"
    voltage:
      name: "${node_name}_Voltage"
    power:
      name: "${node_name}_Power"
      id: main_power
    frequency:
      name: "${node_name}_Frequency"
    power_factor:
      name: "${node_name}_Factor"
    energy:
      # 当前读表度数，每月清0，即为当月度数
      name: "${node_name}_Energy"
      id: main_energy
      unit_of_measurement: kWh
      device_class: energy
      state_class: total_increasing
      accuracy_decimals: 3
      filters:
        - multiply: 0.001
      on_value:
        then:
         - lambda: |-
            id(actual_annual_usage).publish_state( id(global_reset_annual_usage) + id(main_energy).state );
            id(today_usage).publish_state( id(main_energy).state - id(global_yesterday_energy));
            id(current_price).update();
 
   # 表读数为0（复位）时的年度电量，加上当前读表数为实际年度用量
  - platform: template
    name: ${node_name}_Reset Annual Usage
    id: reset_annual_usage
    accuracy_decimals: 3
    device_class: "energy"
    state_class: "total_increasing"
    icon: mdi:lightning-bolt
    unit_of_measurement: kWh
    update_interval: 15s
    lambda: 
      id(set_reset_annual_usage).publish_state(0);
      return id(global_reset_annual_usage);

  # 实际年度用量（ 表复位时的年度电量+当前电量（表读数））
  - platform: template
    name: ${node_name}_Actual Annual Usage
    id: actual_annual_usage
    accuracy_decimals: 3
    device_class: "energy"
    state_class: "total_increasing"
    icon: mdi:lightning-bolt
    unit_of_measurement: kWh
    update_interval: 15s
    lambda: 
      return id(global_reset_annual_usage) + id(main_energy).state;

  # 当前电价
  - platform: template
    name: ${node_name}_Current Price
    id: current_price
    accuracy_decimals: 3
    icon: mdi:home-lightning-bolt
    unit_of_measurement: 'CNY/kWh'
    update_interval: 10s
    
    lambda: |-       
      int step_id=0;
      float current_price = 0.000f;
      float all_prices[3][2] = { {0.617, 0.307}, {0.677, 0.337}, {0.977, 0.487} };
      
      float total_usage = id(actual_annual_usage).state; //标准电费。5人以上用电阶梯加1200度.普通3120-4800 5人4320-6000
      if(total_usage <= 4320) step_id=0;
      if((total_usage>4320) && (total_usage <= 6000)) step_id=1;
      if(total_usage > 6000) step_id=2;
      id(global_step_id) = step_id;
      
      int t_now = parse_number<int>(id(time_sntp).now().strftime("%H%M")).value();
      int t_nowsntp1 = parse_number<int>(id(time_sntp).now().strftime("%m")).value();

      id(id_spot_price_sntp_sensor).publish_state(t_now);    
      id(id_month_sntp_sensor).publish_state(t_nowsntp1); 


      if ( t_now>=800 && t_now < 2200 ){
        current_price = all_prices[step_id][0];
        id(global_is_peak_price) = true;
      }else{
        current_price = all_prices[step_id][1];
        id(global_is_peak_price) = false;
      }
      return current_price;

  # 昨日抄表数
  - platform: template
    name: ${node_name}_Yesterday Energy
    id: yesterday_energy
    accuracy_decimals: 3
    device_class: "energy"
    state_class: "total_increasing"
    icon: mdi:lightning-bolt
    unit_of_measurement: kWh
    update_interval: 15s
    lambda: 
      return id(global_yesterday_energy);

  # 昨日用电量
  - platform: template
    name: ${node_name}_Yesterday Usage
    id: yesterday_usage
    accuracy_decimals: 3
    device_class: "energy"
    state_class: "total_increasing"
    icon: mdi:lightning-bolt
    unit_of_measurement: kWh
    update_interval: 15s
    lambda: 
      return id(global_yesterday_usage);

  # 今日用电量
  - platform: template
    name: ${node_name}_Today Usage 
    id: today_usage
    accuracy_decimals: 3
    device_class: "energy"
    state_class: "total_increasing"
    icon: mdi:lightning-bolt
    unit_of_measurement: kWh
    update_interval: 10s
    lambda: 
      return id(main_energy).state - id(global_yesterday_energy);

  # 上月用电量
  - platform: template
    name: ${node_name}_Last Month Usage 
    id: last_monthly_usage
    accuracy_decimals: 3
    device_class: "energy"
    state_class: "total_increasing"
    icon: mdi:lightning-bolt
    unit_of_measurement: kWh
    update_interval: 20s
    lambda: 
      return id(global_last_month_usage);

  # 昨日、上月、今日、当月谷电量
  - platform: template
    name: ${node_name}_Yesterday Valley Usage
    id: yesterday_valley_usage
    accuracy_decimals: 3
    device_class: "energy"
    state_class: "total_increasing"
    icon: mdi:lightning-bolt
    unit_of_measurement: kWh
    update_interval: 20s
    lambda: 
      return id(global_yesterday_valley_usage);

  - platform: template
    name: ${node_name}_Last Month Valley Usage
    id: last_month_valley_usage
    accuracy_decimals: 3
    device_class: "energy"
    state_class: "total_increasing"
    icon: mdi:lightning-bolt
    unit_of_measurement: kWh
    update_interval: 20s
    lambda: 
      return id(global_last_month_valley_usage);

  - platform: template
    name: ${node_name}_Today Valley Usage
    id: today_valley_usage
    accuracy_decimals: 3
    device_class: "energy"
    state_class: "total_increasing"
    icon: mdi:lightning-bolt
    unit_of_measurement: kWh
    update_interval: 15s
    lambda: 
      return id(global_today_valley_usage); 
  - platform: template
    name: ${node_name}_Month Valley Usage
    id: month_valley_usage
    accuracy_decimals: 3
    device_class: "energy"
    state_class: "total_increasing"
    icon: mdi:lightning-bolt
    unit_of_measurement: kWh
    update_interval: 15s
    lambda: 
      return id(global_month_valley_usage) + id(global_today_valley_usage);
 
  # 昨日、上月、今日、当月峰电量
  - platform: template
    name: ${node_name}_Yesterday Peak Usage
    id: yesterday_peak_usage
    accuracy_decimals: 3
    device_class: "energy"
    state_class: "total_increasing"
    icon: mdi:lightning-bolt
    unit_of_measurement: kWh
    update_interval: 20s
    lambda: 
      return id(global_yesterday_peak_usage);

  - platform: template
    name: ${node_name}_Last Month Peak Usage
    id: last_month_peak_usage
    accuracy_decimals: 3
    device_class: "energy"
    state_class: "total_increasing"
    icon: mdi:lightning-bolt
    unit_of_measurement: kWh
    update_interval: 20s
    lambda: 
      return id(global_last_month_peak_usage);

  - platform: template
    name: ${node_name}_Today Peak Usage 
    id: today_peak_usage
    accuracy_decimals: 3
    device_class: "energy"
    state_class: "total_increasing"
    icon: mdi:lightning-bolt
    unit_of_measurement: kWh
    update_interval: 15s
    lambda: 
      return id(global_today_peak_usage);

  - platform: template
    name: ${node_name}_Month Peak Usage
    id: monthly_peak_usage
    accuracy_decimals: 3
    device_class: "energy"
    state_class: "total_increasing"
    icon: mdi:lightning-bolt
    unit_of_measurement: kWh
    update_interval: 20s
    lambda: 
      return id(global_month_peak_usage) + id(global_today_peak_usage);

  # 昨日、上月、今日、当月电费
  - platform: template
    name: ${node_name}_yesterday_bill
    id: yesterday_bill
    accuracy_decimals: 3
    unit_of_measurement: CNY
    update_interval: 25s
    lambda: 
      return id(global_yesterday_valley_bill)+id(global_yesterday_peak_bill);     

  - platform: template
    name: ${node_name}_Last Month bill
    id: last_month_bill
    accuracy_decimals: 3
    unit_of_measurement: CNY
    update_interval: 25s
    lambda: 
      return id(global_last_month_valley_bill)+id(global_last_month_peak_bill); 

  - platform: template
    name: ${node_name}_today_bill
    id: today_bill
    accuracy_decimals: 3
    unit_of_measurement: CNY
    update_interval: 15s
    lambda: 
      return id(global_today_valley_bill)+id(global_today_peak_bill);     

  - platform: template
    name: ${node_name}_monthly_bill
    id: monthly_bill
    accuracy_decimals: 3
    unit_of_measurement: CNY
    update_interval: 15s
    lambda: 
      return id(global_month_valley_bill)+id(global_month_peak_bill) + id(today_bill).state;     

  # 昨日、上月、今日、当月谷电费
  - platform: template
    name: ${node_name}_yesterday_valley_bill
    id: yesterday_valley_bill
    accuracy_decimals: 3
    unit_of_measurement: CNY
    update_interval: 25s
    lambda: 
      return id(global_yesterday_valley_bill);    

  - platform: template
    name: ${node_name}_Last Month Valley Bill
    id: last_month_valley_bill
    accuracy_decimals: 3
    unit_of_measurement: CNY
    update_interval: 25s
    lambda: 
      return id(global_last_month_valley_bill);    

  - platform: template
    name: ${node_name}_Today Valley Bill
    id: today_valley_bill
    accuracy_decimals: 3
    unit_of_measurement: CNY
    update_interval: 15s
    lambda: 
      return id(global_today_valley_bill);    

  - platform: template
    name: ${node_name}_Month Valley Bill
    id: month_valley_bill
    accuracy_decimals: 3
    unit_of_measurement: CNY
    update_interval: 25s
    lambda: 
      return id(global_month_valley_bill) + id(global_today_valley_bill);

  # 昨日、上月、今日、当月峰电费
  - platform: template
    name: ${node_name}_Yesterday Peak Bill
    id: yesterday_peak_bill
    unit_of_measurement: CNY
    accuracy_decimals: 3
    update_interval: 15s
    lambda: 
      return id(global_yesterday_peak_bill);    

  - platform: template
    name: ${node_name}_Last Month Peak Bill
    id: last_month_peak_bill
    accuracy_decimals: 3
    unit_of_measurement: CNY
    update_interval: 15s
    lambda: 
      return id(global_last_month_peak_bill);    

  - platform: template
    name: ${node_name}_Today Peak_bill
    id: today_peak_bill
    accuracy_decimals: 3
    unit_of_measurement: CNY
    update_interval: 15s
    lambda: 
      return id(global_today_peak_bill);    

  - platform: template
    name: ${node_name}_Month Peak Bill
    id: month_peak_bill
    accuracy_decimals: 3
    unit_of_measurement: CNY
    update_interval: 15s
    lambda: 
      return id(global_month_peak_bill) + id(global_today_peak_bill);   
      




time:
#  - platform: homeassistant
#    timezone: UTC-8
#    id: time_ha
#  - platform: homeassistant
#    timezone: UTC-8
#    id: time_ha
#    on_time_sync: #执行之前强制同步时间
#      then:
#        - ds1307.write_time:
#        - logger.log: "rtcokha"

  - platform: ds1307
    id: time_sntp
    update_interval: never
    timezone: UTC-8

  - platform: sntp
    id: time_sntp1
    servers: ntp.aliyun.com #NTP服务器地址
    timezone: UTC-8 #中国时区
    on_time_sync: #执行之前强制同步时间
      then:
        - ds1307.write_time:
        - logger.log: "rtcoksntp"
    on_time:
      # 昨日总电量,昨日抄表数,昨日总电费,今日总电费重置 
      # 当月峰电量，当月谷电量（昨日为止）
      # 当月峰电费，当月谷电费（昨日为止）      
      # 昨日峰电量,今日峰电量重置
      # 昨日谷电量,今日谷电量重置
      # 昨日峰电费,今日峰电费重置
      # 昨日谷电费,今日谷电费重置
      - seconds: 0
        minutes: 0
        hours: 0 
        then:
          - if:
              condition:
                time.has_time: 
              then:
                - lambda: |-
                    id(global_yesterday_usage) = id(main_energy).state - id(global_yesterday_energy);
                    id(global_yesterday_energy) = id(main_energy).state;
                    id(yesterday_energy).publish_state( id(global_yesterday_energy) );
                    id(yesterday_usage).publish_state( id(global_yesterday_usage) );
                    id(today_bill).publish_state(0.000f);
                    
                    id(global_month_peak_usage) = id(global_month_peak_usage) + id(global_today_peak_usage);
                    id(global_month_valley_usage) = id(global_month_valley_usage) + id(global_today_valley_usage);
                    id(global_month_peak_bill) = id(global_month_peak_bill) + id(global_today_peak_bill);
                    id(global_month_valley_bill) = id(global_month_valley_bill) + id(global_today_valley_bill);
                  
                    id(global_yesterday_peak_usage) = id(global_today_peak_usage);
                    id(global_today_peak_usage) = 0.000f;
                    id(global_yesterday_valley_usage) = id(global_today_valley_usage);
                    id(global_today_valley_usage) = 0.000f;
                  
                    id(global_yesterday_peak_bill) = id(global_today_peak_bill);
                    id(global_today_peak_bill) = 0.000f;
                    id(global_yesterday_valley_bill) = id(global_today_valley_bill);
                    id(global_today_valley_bill) = 0.000f;


                  
    
      # 上月电量, 表复位年度用电量
      # 上月峰电量，上月谷电量, 本月峰电量重置，本月谷电量重置
      # 上月峰电费，上月谷电费, 本月峰电费重置，本月谷电费重置   
      - seconds: 00
        minutes: 00
        hours: 00
        days_of_month: 1  
        then:
          - lambda: |-   
              id(global_last_month_usage) = id(main_energy).state;   
              id(global_reset_annual_usage) = id(global_reset_annual_usage) + id(global_last_month_usage);
              id(last_monthly_usage).publish_state(id(global_last_month_usage));
              id(reset_annual_usage).publish_state(id(global_reset_annual_usage));
              id(actual_annual_usage).publish_state(id(global_reset_annual_usage));
    
              id(global_last_month_peak_usage) = id(global_month_peak_usage);
              id(global_month_peak_usage) = 0.000f;
              id(global_last_month_valley_usage) = id(global_month_valley_usage);
              id(global_month_valley_usage) = 0.000f;

              id(global_last_month_peak_bill) = id(global_month_peak_bill);
              id(global_month_peak_bill) = 0.000f;
              id(global_last_month_valley_bill) = id(global_month_valley_bill);
              id(global_month_valley_bill) = 0.000f;
              id(global_last_energy)=0.000f;
               //bug修复
              id(global_yesterday_energy) = 0.000f;
          - if:
              condition:
                time.has_time: 
              then:  
                - logger.log: "-->publish last monthly electricity."          
                - pzemac.reset_energy: pzemac_main      
                - delay: 2s
                - pzemac.reset_energy: pzemac_main

      - seconds: /5
        then:
          - if:
              condition:
                time.has_time: 
              then:
                - lambda: |-
                    if(id(global_last_energy)==-0.001f) id(global_last_energy) = id(main_energy).state;
      

      # 今日峰电量、峰电费、谷电量、谷电费     
      - seconds: 59
        then:
          - if:
              condition:
                time.has_time: 
              then:
                - lambda: |-
                    if(id(global_last_energy)==-0.001f) id(global_last_energy) = id(main_energy).state;
                    id(current_price).update();
                    float price = id(current_price).state;
                    if(id(global_is_peak_price)){
                      id(global_today_peak_usage) = id(global_today_peak_usage) + id(main_energy).state - id(global_last_energy);
                      id(global_today_peak_bill) = id(global_today_peak_usage) * price;
                      id(today_peak_usage).publish_state(id(global_today_peak_usage));
                      id(today_peak_bill).publish_state(id(global_today_peak_bill));
                    }else{
                      id(global_today_valley_usage) = id(global_today_valley_usage) + id(main_energy).state - id(global_last_energy);
                      id(global_today_valley_bill) = id(global_today_valley_usage) * price;
                      id(today_valley_usage).publish_state(id(global_today_valley_usage));
                      id(today_valley_bill).publish_state(id(global_today_valley_bill));
                    }
                    id(today_bill).publish_state(id(global_today_peak_bill) + id(global_today_valley_bill));
                    id(global_last_energy) = id(main_energy).state;